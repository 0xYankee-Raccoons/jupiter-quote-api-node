/* tslint:disable */
/* eslint-disable */
/**
 * Swap API
 * The heart and soul of Jupiter lies in the Quote and Swap API.  ### API Rate Limit Since 1 December 2024, we have updated our API structure. Please refer to [Station](https://station.jup.ag/docs/) for further details on usage and rate limits.  ### API Usage - API Wrapper Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data Types To Note - Public keys are base58 encoded strings - Raw data such as Vec<u8\\> are base64 encoded strings 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlatformFee
 */
export interface PlatformFee {
    /**
     * 
     * @type {string}
     * @memberof PlatformFee
     */
    amount?: string;
    /**
     * 
     * @type {number}
     * @memberof PlatformFee
     */
    feeBps?: number;
}

/**
 * Check if a given object implements the PlatformFee interface.
 */
export function instanceOfPlatformFee(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PlatformFeeFromJSON(json: any): PlatformFee {
    return PlatformFeeFromJSONTyped(json, false);
}

export function PlatformFeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformFee {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'feeBps': !exists(json, 'feeBps') ? undefined : json['feeBps'],
    };
}

export function PlatformFeeToJSON(value?: PlatformFee | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'feeBps': value.feeBps,
    };
}

