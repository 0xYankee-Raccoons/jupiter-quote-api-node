/* tslint:disable */
/* eslint-disable */
/**
 * Swap API
 * API reference for Jupiter\'s Swap API, including Quote, Swap and Swap Instructions endpoints.  ### Rate Limits Since 1 December 2024, we have updated our API structure. Please refer to https://dev.jup.ag/ for further details on usage and rate limits.  ### Usage - API Wrapper Typescript https://github.com/jup-ag/jupiter-quote-api-node  ### Data Types To Note - Public keys are base58 encoded strings - Raw data such as Vec<u8\\> are base64 encoded strings 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports
 */
export interface PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports {
    /**
     * 
     * @type {string}
     * @memberof PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports
     */
    priorityLevel: PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsPriorityLevelEnum;
    /**
     * - Maximum lamports to cap the priority fee estimation, to prevent overpaying
     * 
     * @type {number}
     * @memberof PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports
     */
    maxLamports: number;
    /**
     * - A boolean to choose between using a global or local fee market to estimate. If `global` is set to `false`, the estimation focuses on fees relevant to the **writable accounts** involved in the instruction.
     * 
     * @type {boolean}
     * @memberof PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports
     */
    global?: boolean;
}


/**
 * @export
 */
export const PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsPriorityLevelEnum = {
    Medium: 'medium',
    High: 'high',
    VeryHigh: 'veryHigh'
} as const;
export type PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsPriorityLevelEnum = typeof PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsPriorityLevelEnum[keyof typeof PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsPriorityLevelEnum];


/**
 * Check if a given object implements the PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports interface.
 */
export function instanceOfPriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "priorityLevel" in value;
    isInstance = isInstance && "maxLamports" in value;

    return isInstance;
}

export function PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsFromJSON(json: any): PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports {
    return PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsFromJSONTyped(json, false);
}

export function PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'priorityLevel': json['priorityLevel'],
        'maxLamports': json['maxLamports'],
        'global': !exists(json, 'global') ? undefined : json['global'],
    };
}

export function PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamportsToJSON(value?: PriorityLevelWithMaxLamportsPriorityLevelWithMaxLamports | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'priorityLevel': value.priorityLevel,
        'maxLamports': value.maxLamports,
        'global': value.global,
    };
}

