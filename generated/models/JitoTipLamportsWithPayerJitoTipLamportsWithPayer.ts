/* tslint:disable */
/* eslint-disable */
/**
 * Swap API
 * API reference for Jupiter\'s Swap API, including Quote, Swap and Swap Instructions endpoints.  ### Rate Limits Since 1 December 2024, we have updated our API structure. Please refer to https://dev.jup.ag/ for further details on usage and rate limits.  ### Usage - API Wrapper Typescript https://github.com/jup-ag/jupiter-quote-api-node  ### Data Types To Note - Public keys are base58 encoded strings - Raw data such as Vec<u8\\> are base64 encoded strings 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface JitoTipLamportsWithPayerJitoTipLamportsWithPayer
 */
export interface JitoTipLamportsWithPayerJitoTipLamportsWithPayer {
    /**
     * Exact amount of lamports to use for the tip
     * @type {number}
     * @memberof JitoTipLamportsWithPayerJitoTipLamportsWithPayer
     */
    lamports: number;
    /**
     * Public key of an account that will be used to pay for the tip
     * @type {string}
     * @memberof JitoTipLamportsWithPayerJitoTipLamportsWithPayer
     */
    payer: string;
}

/**
 * Check if a given object implements the JitoTipLamportsWithPayerJitoTipLamportsWithPayer interface.
 */
export function instanceOfJitoTipLamportsWithPayerJitoTipLamportsWithPayer(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lamports" in value;
    isInstance = isInstance && "payer" in value;

    return isInstance;
}

export function JitoTipLamportsWithPayerJitoTipLamportsWithPayerFromJSON(json: any): JitoTipLamportsWithPayerJitoTipLamportsWithPayer {
    return JitoTipLamportsWithPayerJitoTipLamportsWithPayerFromJSONTyped(json, false);
}

export function JitoTipLamportsWithPayerJitoTipLamportsWithPayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): JitoTipLamportsWithPayerJitoTipLamportsWithPayer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lamports': json['lamports'],
        'payer': json['payer'],
    };
}

export function JitoTipLamportsWithPayerJitoTipLamportsWithPayerToJSON(value?: JitoTipLamportsWithPayerJitoTipLamportsWithPayer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lamports': value.lamports,
        'payer': value.payer,
    };
}

