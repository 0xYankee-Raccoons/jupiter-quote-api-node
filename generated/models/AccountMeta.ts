/* tslint:disable */
/* eslint-disable */
/**
 * Swap API
 * API reference for Jupiter\'s Swap API, including Quote, Swap and Swap Instructions endpoints.  ### Rate Limits Since 1 December 2024, we have updated our API structure. Please refer to https://dev.jup.ag/ for further details on usage and rate limits.  ### Usage - API Wrapper Typescript https://github.com/jup-ag/jupiter-quote-api-node  ### Data Types To Note - Public keys are base58 encoded strings - Raw data such as Vec<u8\\> are base64 encoded strings 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountMeta
 */
export interface AccountMeta {
    /**
     * 
     * @type {string}
     * @memberof AccountMeta
     */
    pubkey: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountMeta
     */
    isSigner: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountMeta
     */
    isWritable: boolean;
}

/**
 * Check if a given object implements the AccountMeta interface.
 */
export function instanceOfAccountMeta(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "pubkey" in value;
    isInstance = isInstance && "isSigner" in value;
    isInstance = isInstance && "isWritable" in value;

    return isInstance;
}

export function AccountMetaFromJSON(json: any): AccountMeta {
    return AccountMetaFromJSONTyped(json, false);
}

export function AccountMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pubkey': json['pubkey'],
        'isSigner': json['isSigner'],
        'isWritable': json['isWritable'],
    };
}

export function AccountMetaToJSON(value?: AccountMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pubkey': value.pubkey,
        'isSigner': value.isSigner,
        'isWritable': value.isWritable,
    };
}

