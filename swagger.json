{
  "swagger": "2.0",
  "info": {
    "title": "Jupiter API",
    "description": "Jupiter quote and swap API",
    "version": "0.0.0"
  },
  "definitions": {
    "def-0": {
      "type": "object",
      "required": [],
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "inputMint": {
          "type": "string"
        },
        "outputMint": {
          "type": "string"
        },
        "notEnoughLiquidity": {
          "type": "boolean"
        },
        "inAmount": {
          "type": "integer"
        },
        "outAmount": {
          "type": "integer"
        },
        "priceImpactPct": {
          "type": "number"
        },
        "lpFee": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "number"
            },
            "mint": {
              "type": "string"
            },
            "pct": {
              "type": "number"
            }
          }
        },
        "platformFee": {
          "type": "object",
          "properties": {
            "amount": {
              "type": "number"
            },
            "mint": {
              "type": "string"
            },
            "pct": {
              "type": "number"
            }
          }
        }
      },
      "title": "MarketInfo"
    },
    "def-1": {
      "type": "object",
      "required": ["inAmount", "outAmount", "priceImpactPct", "marketInfos"],
      "properties": {
        "inAmount": {
          "type": "integer"
        },
        "outAmount": {
          "type": "integer"
        },
        "amount": {
          "type": "integer"
        },
        "outAmountWithSlippage": {
          "type": "integer",
          "nullable": true,
          "deprecated": true,
          "description": "The minimum out amount, populated when swapMode is ExactIn, deprecated please use otherAmountThreshold instead"
        },
        "otherAmountThreshold": {
          "type": "integer",
          "description": "The threshold for the swap based on the provided slippage: when swapMode is ExactIn the minimum out amount, when swapMode is ExactOut the maximum in amount"
        },
        "swapMode": {
          "type": "string",
          "enum": ["ExactIn", "ExactOut"]
        },
        "priceImpactPct": {
          "type": "number"
        },
        "marketInfos": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [],
            "properties": {
              "id": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "inputMint": {
                "type": "string"
              },
              "outputMint": {
                "type": "string"
              },
              "notEnoughLiquidity": {
                "type": "boolean"
              },
              "inAmount": {
                "type": "integer"
              },
              "outAmount": {
                "type": "integer"
              },
              "priceImpactPct": {
                "type": "number"
              },
              "lpFee": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "mint": {
                    "type": "string"
                  },
                  "pct": {
                    "type": "number"
                  }
                }
              },
              "platformFee": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "mint": {
                    "type": "string"
                  },
                  "pct": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "fees": {
          "description": "Only returned when userPublicKey is given to /quote",
          "nullable": true,
          "type": "object",
          "properties": {
            "signatureFee": {
              "type": "number",
              "description": "This inidicate the total amount needed for signing transaction(s). Value in lamports."
            },
            "openOrdersDeposits": {
              "description": "This inidicate the total amount needed for deposit of serum order account(s). Value in lamports.",
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "ataDeposits": {
              "description": "This inidicate the total amount needed for deposit of associative token account(s). Value in lamports.",
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "totalFeeAndDeposits": {
              "type": "number",
              "description": "This inidicate the total lamports needed for fees and deposits above."
            },
            "minimumSOLForTransaction": {
              "type": "number",
              "description": "This inidicate the minimum lamports needed for transaction(s). Might be used to create wrapped SOL and will be returned when the wrapped SOL is closed."
            }
          }
        }
      },
      "title": "Route"
    }
  },
  "paths": {
    "/v1/quote": {
      "get": {
        "summary": "Return route",
        "description": "Get quote for a given input mint, output mint and amount",
        "tags": [],
        "parameters": [
          {
            "type": "string",
            "description": "inputMint",
            "required": true,
            "in": "query",
            "name": "inputMint"
          },
          {
            "type": "string",
            "description": "outputMint",
            "required": true,
            "in": "query",
            "name": "outputMint"
          },
          {
            "type": "integer",
            "description": "amount",
            "required": true,
            "in": "query",
            "name": "amount"
          },
          {
            "type": "string",
            "enum": ["ExactIn", "ExactOut"],
            "description": "swapMode",
            "required": false,
            "in": "query",
            "name": "swapMode"
          },
          {
            "type": "number",
            "description": "slippage",
            "required": false,
            "in": "query",
            "name": "slippage"
          },
          {
            "type": "integer",
            "description": "fee bps",
            "required": false,
            "in": "query",
            "name": "feeBps"
          },
          {
            "type": "boolean",
            "description": "Only return direct routes (no hoppings and split trade)",
            "required": false,
            "in": "query",
            "name": "onlyDirectRoutes"
          },
          {
            "type": "string",
            "description": "Public key of the user (only pass in if you want deposit and fee being returned, might slow down query)",
            "required": false,
            "in": "query",
            "name": "userPublicKey"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "description": "Default response",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "inAmount",
                      "outAmount",
                      "priceImpactPct",
                      "marketInfos"
                    ],
                    "properties": {
                      "inAmount": {
                        "type": "integer"
                      },
                      "outAmount": {
                        "type": "integer"
                      },
                      "amount": {
                        "type": "integer"
                      },
                      "outAmountWithSlippage": {
                        "type": "integer",
                        "nullable": true,
                        "deprecated": true,
                        "description": "The minimum out amount, populated when swapMode is ExactIn, deprecated please use otherAmountThreshold instead"
                      },
                      "otherAmountThreshold": {
                        "type": "integer",
                        "description": "The threshold for the swap based on the provided slippage: when swapMode is ExactIn the minimum out amount, when swapMode is ExactOut the maximum in amount"
                      },
                      "swapMode": {
                        "type": "string",
                        "enum": ["ExactIn", "ExactOut"]
                      },
                      "priceImpactPct": {
                        "type": "number"
                      },
                      "marketInfos": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "label": {
                              "type": "string"
                            },
                            "inputMint": {
                              "type": "string"
                            },
                            "outputMint": {
                              "type": "string"
                            },
                            "notEnoughLiquidity": {
                              "type": "boolean"
                            },
                            "inAmount": {
                              "type": "integer"
                            },
                            "outAmount": {
                              "type": "integer"
                            },
                            "priceImpactPct": {
                              "type": "number"
                            },
                            "lpFee": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number"
                                },
                                "mint": {
                                  "type": "string"
                                },
                                "pct": {
                                  "type": "number"
                                }
                              }
                            },
                            "platformFee": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number"
                                },
                                "mint": {
                                  "type": "string"
                                },
                                "pct": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      },
                      "fees": {
                        "description": "Only returned when userPublicKey is given to /quote",
                        "nullable": true,
                        "type": "object",
                        "properties": {
                          "signatureFee": {
                            "type": "number",
                            "description": "This inidicate the total amount needed for signing transaction(s). Value in lamports."
                          },
                          "openOrdersDeposits": {
                            "description": "This inidicate the total amount needed for deposit of serum order account(s). Value in lamports.",
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "ataDeposits": {
                            "description": "This inidicate the total amount needed for deposit of associative token account(s). Value in lamports.",
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "totalFeeAndDeposits": {
                            "type": "number",
                            "description": "This inidicate the total lamports needed for fees and deposits above."
                          },
                          "minimumSOLForTransaction": {
                            "type": "number",
                            "description": "This inidicate the minimum lamports needed for transaction(s). Might be used to create wrapped SOL and will be returned when the wrapped SOL is closed."
                          }
                        }
                      }
                    }
                  }
                },
                "timeTaken": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "/v1/price": {
      "get": {
        "summary": "Return simple price",
        "description": "Get simple price for a given input mint, output mint and amount",
        "tags": [],
        "parameters": [
          {
            "type": "string",
            "description": "Symbol or address of a token, (e.g. SOL or EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v).",
            "required": true,
            "in": "query",
            "name": "id"
          },
          {
            "type": "string",
            "description": "Default to USDC. Symbol or address of a token, (e.g. SOL or EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v).",
            "required": false,
            "in": "query",
            "name": "vsToken"
          },
          {
            "type": "number",
            "description": "Unit amount of specified input token. Default to 1.",
            "required": false,
            "in": "query",
            "name": "amount"
          }
        ],
        "responses": {
          "200": {
            "description": "Default response with id",
            "schema": {
              "description": "Default response with id",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Address of the token"
                    },
                    "mintSymbol": {
                      "type": "string",
                      "description": "Symbol of the token"
                    },
                    "vsToken": {
                      "type": "string",
                      "description": "Address of the vs token"
                    },
                    "vsTokenSymbol": {
                      "type": "string",
                      "description": "Symbol of the vs token"
                    },
                    "price": {
                      "type": "number",
                      "description": "Default to 1 unit of the token worth in USDC if vsToken is not specified."
                    }
                  }
                },
                "timeTaken": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Amount lesser or equals to 0. No routes found for trading pairs",
            "schema": {
              "description": "Amount lesser or equals to 0. No routes found for trading pairs",
              "type": "object"
            }
          },
          "404": {
            "description": "Symbol or address not found for either input or vsToken",
            "schema": {
              "description": "Symbol or address not found for either input or vsToken",
              "type": "object"
            }
          },
          "409": {
            "description": "Duplicate symbol found for input or vsToken. The server will respond an error structure which contains the conflict addresses. User will have to use address mode instead.",
            "schema": {
              "description": "Duplicate symbol found for input or vsToken. The server will respond an error structure which contains the conflict addresses. User will have to use address mode instead.",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Duplicated symbol found for [symbol], use one of the address instead"
                    },
                    "addresses": {
                      "type": "array",
                      "description": "List of addresses for the symbol",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/swap": {
      "post": {
        "summary": "Return setup, swap and cleanup transactions",
        "description": "Get swap serialized transactions for a route",
        "tags": [],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": ["route", "userPublicKey"],
              "properties": {
                "route": {
                  "$ref": "#/definitions/def-1"
                },
                "wrapUnwrapSOL": {
                  "type": "boolean",
                  "description": "Wrap/unwrap SOL"
                },
                "feeAccount": {
                  "type": "string",
                  "description": "fee account"
                },
                "tokenLedger": {
                  "type": "string",
                  "description": "custom token ledger account"
                },
                "userPublicKey": {
                  "type": "string",
                  "description": "Public key of the user"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "description": "Default response",
              "type": "object",
              "properties": {
                "setupTransaction": {
                  "type": "string",
                  "description": "Base64 encoded transaction"
                },
                "swapTransaction": {
                  "type": "string",
                  "description": "Base64 encoded transaction"
                },
                "cleanupTransaction": {
                  "type": "string",
                  "description": "Base64 encoded transaction"
                }
              }
            }
          }
        }
      }
    },
    "/v1/route-map": {
      "get": {
        "description": "[DEPRECATED] use /indexed-route-map Returns a hash map, input mint as key and an array of valid output mint as values",
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v1/indexed-route-map": {
      "get": {
        "description": "Returns a hash map, input mint as key and an array of valid output mint as values, token mints are indexed to reduce the file size",
        "parameters": [
          {
            "type": "boolean",
            "description": "Only return direct routes (no hoppings and split trade)",
            "required": false,
            "in": "query",
            "name": "onlyDirectRoutes"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "description": "Default response",
              "type": "object",
              "properties": {
                "mintKeys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "All the mints that are indexed to match in indexedRouteMap"
                },
                "indexedRouteMap": {
                  "type": "object",
                  "description": "All the possible route and their corresponding output mints",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "example": {
                    "1": [2, 3, 4],
                    "2": [1, 3, 4]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"]
}
